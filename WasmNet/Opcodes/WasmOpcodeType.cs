namespace WasmNet.Opcodes {
    public enum WasmOpcodeType {
        Unreachable = 0x00,
        Nop = 0x01,
        Block = 0x02,
        Loop = 0x03,
        If = 0x04,
        Else = 0x05,
        End = 0x0b,
        Br = 0x0c,
        BrIf = 0x0d,
        BrTable = 0x0e,
        Return = 0x0f,

        Call = 0x10,
        CallIndirect = 0x11,

        Drop = 0x1a,
        Select = 0x1b,

        GetLocal = 0x20,
        SetLocal = 0x21,
        TeeLocal = 0x22,
        GetGlobal = 0x23,
        SetGlobal = 0x24,

        I32Load = 0x28,
        I64Load = 0x29,
        F32Load = 0x2a,
        F64Load = 0x2b,
        I32Load8S = 0x2c,
        I32Load8U = 0x2d,
        I32Load16S = 0x2e,
        I32Load16U = 0x2f,
        I64Load8S = 0x30,
        I64Load8U = 0x31,
        I64Load16S = 0x32,
        I64Load16U = 0x33,
        I64Load32S = 0x34,
        I64Load32U = 0x35,
        I32Store = 0x36,
        I64Store = 0x37,
        F32Store = 0x38,
        F64Store = 0x39,
        I32Store8 = 0x3a,
        I32Store16 = 0x3b,
        I64Store8 = 0x3c,
        I64Store16 = 0x3d,
        I64Store32 = 0x3e,
        CurrentMemory = 0x3f,
        GrowMemory = 0x40,

        I32Const = 0x41,
        I64Const = 0x42,
        F32Const = 0x43,
        F64Const = 0x44,

        I32Eqz = 0x45,
        I32Eq = 0x46,
        I32Ne = 0x47,
        I32Lts = 0x48,
        I32Ltu = 0x49,
        I32Gts = 0x4a,
        I32Gtu = 0x4b,
        I32Les = 0x4c,
        I32Leu = 0x4d,
        I32Ges = 0x4e,
        I32Geu = 0x4f,

        I64Eqz = 0x50,
        I64Eq = 0x51,
        I64Ne = 0x52,
        I64Lts = 0x53,
        I64Ltu = 0x54,
        I64Gts = 0x55,
        I64Gtu = 0x56,
        I64Les = 0x57,
        I64Leu = 0x58,
        I64Ges = 0x59,
        I64Geu = 0x5a,

        F32Eq = 0x5b,
        F32Ne = 0x5c,
        F32Lt = 0x5d,
        F32Gt = 0x5e,
        F32Le = 0x5f,
        F32Ge = 0x60,

        F64Eq = 0x61,
        F64Ne = 0x62,
        F64Lt = 0x63,
        F64Gt = 0x64,
        F64Le = 0x65,
        F64Ge = 0x66,

        I32Clz = 0x67,
        I32Ctz = 0x68,
        I32PopCnt = 0x69,
        I32Add = 0x6a,
        I32Sub = 0x6b,
        I32Mul = 0x6c,
        I32DivS = 0x6d,
        I32DivU = 0x6e,
        I32RemS = 0x6f,
        I32RemU = 0x70,
        I32And = 0x71,
        I32Or = 0x72,
        I32Xor = 0x73,
        I32Shl = 0x74,
        I32ShrS = 0x75,
        I32ShrU = 0x76,
        I32Rotl = 0x77,
        I32Rotr = 0x78,

        I64Clz = 0x79,
        I64Ctz = 0x7a,
        I64PopCnt = 0x7b,
        I64Add = 0x7c,
        I64Sub = 0x7d,
        I64Mul = 0x7e,
        I64DivS = 0x7f,
        I64DivU = 0x80,
        I64RemS = 0x81,
        I64RemU = 0x82,
        I64And = 0x83,
        I64Or = 0x84,
        I64Xor = 0x85,
        I64Shl = 0x86,
        I64ShrS = 0x87,
        I64ShrU = 0x88,
        I64Rotl = 0x89,
        I64Rotr = 0x8a,

        I32WrapI64 = 0xa7,
        I64ExtendSI32 = 0xac,
        I64ExtendUI32 = 0xad
    }
}
